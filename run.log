
[Real File Compile Result]

import { defineComponent, ref } from 'vue'

const __sfc__ = defineComponent({
  setup() {
    return {
      inputModel: ref(''),
      modelValue: ref('')
    }
  },
})

import { createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, createVNode as _createVNode, openBlock as _openBlock, resolveComponent as _resolveComponent, resolveDirective as _resolveDirective, toDisplayString as _toDisplayString, vModelText as _vModelText, withCtx as _withCtx, withDirectives as _withDirectives, withModifiers as _withModifiers } from "vue"

function render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_another_element = _resolveComponent("another-element")
  const _component_abc_def = _resolveComponent("abc-def")
  const _directive_directive = _resolveDirective("directive")
  const _directive_for = _resolveDirective("for")

  return (_openBlock(), _createBlock(_component_abc_def, {
    modelValue: _ctx.modelValue,
    "onUpdate:modelValue": $event => ((_ctx.modelValue) = $event),
    modelModifiers: {lazy: true},
    "another-model-value": _ctx.modelValue,
    "onUpdate:anotherModelValue": $event => ((_ctx.modelValue) = $event),
    "another-model-valueModifiers": {trim: true},
    "test-bound": bar + baz,
    disabled: "disabled",
    class: "",
    onClick: _withModifiers(() => {}, ["prevent"]),
    onHello: world
  }, {
    "test-slot": _withCtx(({ value }) => [_createTextVNode(" test " + _toDisplayString( value ), 1 /* TEXT */)]),
    "custom-slot": _withCtx(({ prop }) => [
      _createElementVNode("span", {
        class: "span-class"
      }, " Span text ", -1 /* HOISTED */),
      _createTextVNode("  " + _toDisplayString( prop ), 1 /* TEXT */)
    ]),
    default: _withCtx(() => [
      _createTextVNode(" The text of the node " + _toDisplayString( dynamicValue ) + "  ", 1 /* TEXT */),
      _createCommentVNode(" Comment "),
      _createVNode(_component_another_element),
      _createTextVNode(" yet another text ", 1 /* TEXT */),
      _withDirectives(_createElementVNode("input", null, null, -1 /* HOISTED */), [
        [_vModelText, _ctx.inputModel]
        [
          _directive_directive,
          _ctx.baz,
          "foo",
          {
            bar: true,
            buzz: true
          }
        ]
      ]),
      _createCommentVNode(" Todo remove space between these elements, otherwise it breaks the invariant in conditional codegen "),
      true
        ? (_openBlock(), _createElementBlock("div", null, "if div", -1 /* HOISTED */))
        : false
          ? (_openBlock(), _createElementBlock("span", null, "else-if span", -1 /* HOISTED */))
          : _createCommentVNode("v-if", true),
      _withDirectives(_createElementVNode("template", null, [
        _createTextVNode(" hey ", 1 /* TEXT */),
        _createElementVNode("span", {
          key: i
        }, _toDisplayString( i ), -1 /* HOISTED */)
      ], -1 /* HOISTED */), [
        [_directive_for, _ctx.i in list]
      ])
    ])
  }))
}
__sfc__.render = render
export default __sfc__
Time took: 125.537µs

[Synthetic Compile Result]

const __sfc__ = {
  name: 'TestComponent'
}
import { createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, createVNode as _createVNode, openBlock as _openBlock, resolveComponent as _resolveComponent, toDisplayString as _toDisplayString } from "vue"

function render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_CustomComponent = _resolveComponent("CustomComponent")

  return (_openBlock(), _createElementBlock("span", {
    class: "yes"
  }, [
    _createTextVNode("Hello world" + _toDisplayString(testRef) + "yes yes", 1 /* TEXT */),
    _createElementVNode("i", null, "italics, mm" + _toDisplayString(hey), -1 /* HOISTED */),
    _createVNode(_component_CustomComponent, null, {
      default: _withCtx(() => [_createTextVNode("italics, mm" + _toDisplayString(hey), 1 /* TEXT */)])
    }),
    _createTextVNode("end of span node", 1 /* TEXT */)
  ], -1 /* HOISTED */))
}
__sfc__.render = render
export default __sfc__
Time took: 34.435µs
